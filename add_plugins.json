[
  {
    "id": "ihor-sokoliuk-mcp-searxng",
    "name": "ihor-sokoliuk/mcp-searxng",
    "description": "MCP server for SearXNG web search integration",
    "category": "utility",
    "license": "MIT",
    "repository": "https://github.com/ihor-sokoliuk/mcp-searxng",
    "author": "ihor-sokoliuk",
    "stars": 304,
    "updated_at": "2025-10-29T05:39:20Z",
    "language": "TypeScript",
    "install_type": "npm",
    "package": "ihor-sokoliuk/mcp-searxng",
    "environment": "SEARXNG_URL",
    "args": "",
    "verified": true,
    "official": false
  },
  {
    "id": "overtlids-mcp-searxng-enhanced",
    "name": "OvertliDS/mcp-searxng-enhanced",
    "description": "Enhanced MCP server for SearXNG with additional features",
    "category": "utility",
    "license": "MIT",
    "repository": "https://github.com/OvertliDS/mcp-searxng-enhanced",
    "author": "OvertliDS",
    "stars": 24,
    "updated_at": "2025-08-11T17:51:51Z",
    "language": "Python",
    "install_type": "docker",
    "package": "mcp-searxng-enhanced",
    "environment": "SEARXNG_ENGINE_API_BASE_URL DESIRED_TIMEZONE",
    "args": "",
    "verified": false,
    "official": false
  },
  {
    "id": "modelcontextprotocol-server-fetch",
    "name": "modelcontextprotocol/server-fetch",
    "description": "Efficient web content fetching and processing for AI consumption",
    "category": "utility",
    "license": "MIT",
    "repository": "https://github.com/modelcontextprotocol/servers/tree/main/src/fetch",
    "author": "modelcontextprotocol",
    "stars": 71613,
    "updated_at": "2025-10-29T13:34:10Z",
    "language": "Python",
    "install_type": "pip",
    "package": "mcp-server-fetch",
    "environment": "",
    "args": "",
    "verified": false,
    "official": true
  },
  {
    "id": "modelcontextprotocol-server-filesystem",
    "name": "modelcontextprotocol/server-filesystem",
    "description": "Direct local file system access.",
    "category": "utility",
    "license": "MIT",
    "repository": "https://github.com/modelcontextprotocol/servers/tree/main/src/filesystem",
    "author": "modelcontextprotocol",
    "stars": 71613,
    "updated_at": "2025-10-29T13:34:10Z",
    "language": "TypeScript",
    "install_type": "npm",
    "package": "@modelcontextprotocol/server-filesystem",
    "environment": "",
    "args": "value::'Directory'",
    "verified": false,
    "official": true
  },
  {
    "id": "modelcontextprotocol-server-git",
    "name": "modelcontextprotocol/server-git",
    "description": "Direct Git repository operations including reading, searching, and analyzing local repositories",
    "category": "development",
    "license": "MIT",
    "repository": "https://github.com/modelcontextprotocol/servers/tree/main/src/git",
    "author": "modelcontextprotocol",
    "stars": 71613,
    "updated_at": "2025-10-29T13:34:10Z",
    "language": "Python",
    "install_type": "pip",
    "package": "mcp-server-git",
    "environment": "",
    "args": "",
    "verified": false,
    "official": true
  },
  {
    "id": "modelcontextprotocol-server-memory",
    "name": "modelcontextprotocol/server-memory",
    "description": "Knowledge graph-based persistent memory system for maintaining context",
    "category": "ai",
    "license": "MIT",
    "repository": "https://github.com/modelcontextprotocol/servers/tree/main/src/memory",
    "author": "modelcontextprotocol",
    "stars": 71613,
    "updated_at": "2025-10-29T13:34:10Z",
    "language": "TypeScript",
    "install_type": "npm",
    "package": "@modelcontextprotocol/server-memory",
    "environment": "MEMORY_FILE_PATH",
    "args": "",
    "verified": false,
    "official": true
  },
  {
    "id": "modelcontextprotocol-server-google-maps",
    "name": "modelcontextprotocol/server-google-maps",
    "description": "Google Maps integration for location services, routing, and place details",
    "category": "integration",
    "license": "MIT",
    "repository": "https://github.com/modelcontextprotocol/servers-archived/tree/main/src/google-maps",
    "author": "modelcontextprotocol",
    "stars": 176,
    "updated_at": "2025-05-28T17:57:12Z",
    "language": "JavaScript",
    "install_type": "npm",
    "package": "@modelcontextprotocol/server-google-maps",
    "environment": "GOOGLE_MAPS_API_KEY",
    "args": "",
    "verified": false,
    "official": true
  },
  {
    "id": "microsoft-markitdown",
    "name": "microsoft/markitdown",
    "description": "MCP tool access to MarkItDown -- a library that converts many file formats (local or remote) to Markdown for LLM consumption.",
    "category": "utility",
    "license": "MIT",
    "repository": "https://github.com/microsoft/markitdown/tree/main/packages/markitdown-mcp",
    "author": "microsoft",
    "stars": 82309,
    "updated_at": "2025-10-20T23:07:42Z",
    "language": "Python",
    "install_type": "pip",
    "package": "markitdown",
    "environment": "",
    "args": "",
    "verified": false,
    "official": true
  },
  {
    "id": "mindsdb-mindsdb",
    "name": "mindsdb/mindsdb",
    "description": "Connect and unify data across various platforms and databases with [MindsDB as a single MCP server](https://docs.mindsdb.com/mcp/overview).",
    "category": "utility",
    "license": "NOASSERTION",
    "repository": "https://github.com/mindsdb/mindsdb",
    "author": "mindsdb",
    "stars": 36719,
    "updated_at": "2025-10-31T08:09:23Z",
    "language": "Python",
    "install_type": "docker",
    "package": "mindsdb",
    "environment": "MINDSDB_APIS",
    "args": "-p 47334:47334 -p 47335:47335",
    "verified": false,
    "official": true
  },
  {
    "id": "upstash-context7",
    "name": "upstash/context7",
    "description": "Up-to-date code documentation for LLMs and AI code editors.",
    "category": "ai",
    "license": "MIT",
    "repository": "https://github.com/upstash/context7",
    "author": "upstash",
    "stars": 35683,
    "updated_at": "2025-10-31T08:17:02Z",
    "language": "JavaScript",
    "install_type": "npm",
    "package": "@upstash/context7-mcp",
    "environment": "",
    "args": "--api-key value::'API Key'",
    "verified": false,
    "official": true
  },
  {
    "id": "github-github-mcp-server",
    "name": "github/github-mcp-server",
    "description": "Official GitHub server for integration with repository management, PRs, issues, and more.",
    "category": "development",
    "license": "MIT",
    "repository": "https://github.com/github/github-mcp-server",
    "author": "github",
    "stars": 24093,
    "updated_at": "2025-10-30T21:32:23Z",
    "language": "Go",
    "install_type": "docker",
    "package": "ghcr.io/github/github-mcp-server",
    "environment": "GITHUB_PERSONAL_ACCESS_TOKEN GITHUB_HOST",
    "args": "",
    "verified": false,
    "official": true
  },
  {
    "id": "agent-infra-mcp-server-browser",
    "name": "agent-infra/mcp-server-browser",
    "description": "Browser automation capabilities using Puppeteer, both support local and remote browser connection.",
    "category": "development",
    "license": "Apache-2.0",
    "repository": "https://github.com/bytedance/UI-TARS-desktop/tree/main/packages/agent-infra/mcp-servers/browser",
    "author": "bytedance",
    "stars": 19348,
    "updated_at": "2025-10-28T10:54:31Z",
    "language": "TypeScript",
    "install_type": "npm",
    "package": "@agent-infra/mcp-server-browser@latest",
    "environment": "",
    "args": "",
    "verified": false,
    "official": true
  },
  {
    "id": "mickaelkerjean-filestash",
    "name": "mickaelkerjean/filestash",
    "description": "Remote Storage Access: SFTP, S3, FTP, SMB, NFS, WebDAV, GIT, FTPS, gcloud, azure blob, sharepoint, etc.",
    "category": "utility",
    "license": "AGPL-3.0",
    "repository": "https://github.com/mickael-kerjean/filestash/tree/master/server/plugin/plg_handler_mcp",
    "author": "mickael-kerjean",
    "stars": 12940,
    "updated_at": "2025-10-30T06:11:30Z",
    "language": "Go",
    "install_type": "compile",
    "package": "mickael-kerjean/filestash/filestash/tree/master/server/plugin/plg_handler_mcp",
    "environment": "",
    "args": "",
    "verified": false,
    "official": false
  },
  {
    "id": "wonderwhy-er-desktopcommandermcp",
    "name": "wonderwhy-er/DesktopCommanderMCP",
    "description": "A swiss-army-knife that can manage/execute programs and read/write/search/edit code and text files.",
    "category": "development",
    "license": "MIT",
    "repository": "https://github.com/wonderwhy-er/DesktopCommanderMCP",
    "author": "wonderwhy-er",
    "stars": 4811,
    "updated_at": "2025-10-29T15:07:53Z",
    "language": "JavaScript",
    "install_type": "npm",
    "package": "@wonderwhy-er/desktop-commander@latest",
    "verified": false,
    "official": false
  },
  {
    "id": "manusa-kubernetes-mcp-server",
    "name": "manusa/Kubernetes MCP Server",
    "description": "powerful Kubernetes MCP server with additional support for OpenShift. Besides providing CRUD operations for **any** Kubernetes resource, this server provides specialized tools to interact with your cluster.",
    "category": "integration",
    "license": "Apache-2.0",
    "repository": "https://github.com/manusa/kubernetes-mcp-server",
    "author": "manusa",
    "stars": 747,
    "updated_at": "2025-10-30T15:31:55Z",
    "language": "Go",
    "install_type": "npm",
    "package": "kubernetes-mcp-server@latest",
    "environment": "",
    "args": "",
    "verified": false,
    "official": false
  },
  {
    "id": "tumf-mcp-shell-server",
    "name": "tumf/mcp-shell-server",
    "description": "A secure shell command execution server implementing the Model Context Protocol (MCP)",
    "category": "development",
    "license": "MIT",
    "repository": "https://github.com/tumf/mcp-shell-server",
    "author": "tumf",
    "stars": 148,
    "updated_at": "2025-09-08T19:43:08Z",
    "language": "Python",
    "install_type": "pip",
    "package": "mcp-shell-server",
    "environment": "ALLOW_COMMANDS",
    "args": "",
    "verified": false,
    "official": false
  },
  {
    "id": "reading-plus-ai-mcp-server-deep-research",
    "name": "reading-plus-ai/mcp-server-deep-research",
    "description": "MCP server providing OpenAI/Perplexity-like autonomous deep research, structured query elaboration, and concise reporting.",
    "category": "utility",
    "license": "MIT",
    "repository": "https://github.com/reading-plus-ai/mcp-server-deep-research",
    "author": "reading-plus-ai",
    "stars": 185,
    "updated_at": "2025-03-25T15:50:11Z",
    "language": "Python",
    "install_type": "pip",
    "package": "mcp-server-deep-research",
    "environment": "",
    "args": "",
    "verified": false,
    "official": false
  },
  {
    "id": "browsermcp-mcp",
    "name": "browsermcp/mcp",
    "description": "Automate your local Chrome browser",
    "category": "development",
    "license": "Apache-2.0",
    "repository": "https://github.com/browsermcp/mcp",
    "author": "browsermcp",
    "stars": 4776,
    "updated_at": "2025-04-24T21:49:44Z",
    "language": "TypeScript",
    "install_type": "npm",
    "package": "@browsermcp/mcp@latest",
    "environment": "",
    "args": "",
    "verified": false,
    "official": true
  },
  {
    "id": "abdelstark-bitcoin-mcp",
    "name": "AbdelStark/bitcoin-mcp",
    "description": "₿ A Model Context Protocol (MCP) server that enables AI models to interact with Bitcoin, allowing them to generate keys, validate addresses, decode transactions, query the blockchain, and more.",
    "category": "development",
    "license": "MIT",
    "repository": "https://github.com/AbdelStark/bitcoin-mcp",
    "author": "AbdelStark",
    "stars": 65,
    "updated_at": "2025-08-01T09:38:50Z",
    "language": "TypeScript",
    "install_type": "npm",
    "package": "bitcoin-mcp@latest",
    "environment": "",
    "args": "",
    "verified": false,
    "official": false
  },
  {
    "id": "getalby-mcp",
    "name": "getAlby/mcp",
    "description": "Connect any bitcoin lightning wallet to your agent to send and receive instant payments globally.",
    "category": "finance",
    "license": "Apache-2.0",
    "repository": "https://github.com/getAlby/mcp",
    "author": "getAlby",
    "stars": 34,
    "updated_at": "2025-07-16T11:04:59Z",
    "language": "TypeScript",
    "install_type": "npm",
    "package": "@getalby/mcp",
    "environment": "NWC_CONNECTION_STRING",
    "args": "",
    "verified": false,
    "official": false
  }
]
